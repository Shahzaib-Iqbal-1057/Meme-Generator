{"ast":null,"code":"var _jsxFileName = \"/Users/shafiqaiqbal/my-react-app/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { MdeEditor } from 'react-mde';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [markdown, setMarkdown] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(MdeEditor, {\n    value: markdown,\n    onChange: setMarkdown\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // import \"./style.css\";\n// const Navbar = () =>\n// {\n//   return (<div className='navbar'>\n//     <h1>Meme Generator</h1>\n//     <p>React Course Project-3</p>\n//   </div>) \n// }\n// const Meme = () =>\n// {\n//   const [meme_data,setMemeData] = React.useState({\n//   meme_url : \"https://i.imgflip.com/25w3.jpg\",\n//   top_text : \"\",\n//   bottom_text : \"\",\n//   memes : {}\n//   });\n//   React.useEffect(() => {\n//     fetch(\"https://api.imgflip.com/get_memes\")\n//       .then(res => res.json())\n//       .then(data => setMemeData(function(prev_data)\n//       {\n//         return {\n//           ...prev_data,\n//           memes : data\n//         }\n//       }))\n//   },[])\n//   const handleClick = (event) =>\n//   {\n//     const random = Math.floor(Math.random()*meme_data.memes.data.memes.length)\n//     const newUrl = meme_data.memes.data.memes[random].url\n//     const {name,value,type} = event.target\n//     setMemeData(function(prev_data)\n//     {\n//       if(type === \"button\")\n//       {\n//         return {\n//           memes : prev_data.memes,\n//           meme_url : newUrl,\n//           top_text : \"\",\n//           bottom_text : \"\"\n//         }\n//       }\n//       else\n//       {\n//         return {\n//           ...prev_data,\n//           [name] : value\n//         }\n//       }\n//     })\n//   }\n//   return (\n//   <>\n//     <div className='meme'>\n//       <div className='input'>\n//         <input type=\"text\" placeholder= \"top text\" className='left' name= \"top_text\" onChange={handleClick} value = {meme_data.top_text}></input>\n//         <input type=\"text\" placeholder='bottom text' className='right' name= \"bottom_text\" onChange={handleClick} value = {meme_data.bottom_text}></input>\n//       </div> \n//       <button onClick={handleClick} name = \"meme_url\" type = \"button\">Get a new meme image ðŸ–¼</button>\n//     </div> \n//       <img src = {meme_data.meme_url} alt = \"Meme\" className='meme-image'/>\n//       <h2 className=\"meme--text top\">{meme_data.top_text}</h2>\n//       <h2 className=\"meme--text bottom\">{meme_data.bottom_text}</h2>\n//   </>\n//   )\n// }\n// const Element = <>\n//   <Navbar/>\n//   <Meme/>\n// </>\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(Element)\n\n\n_s(MyComponent, \"VgmOYLpa/B4R4IjlDC+VW94zztk=\");\n\n_c = MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","ReactDOM","MdeEditor","MyComponent","markdown","setMarkdown","useState"],"sources":["/Users/shafiqaiqbal/my-react-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM  from 'react-dom/client';\nimport { MdeEditor } from 'react-mde';\n\nfunction MyComponent() {\n  const [markdown, setMarkdown] = useState(\"\");\n  return (\n    <MdeEditor\n      value={markdown}\n      onChange={setMarkdown}\n    />\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import \"./style.css\";\n\n// const Navbar = () =>\n// {\n//   return (<div className='navbar'>\n//     <h1>Meme Generator</h1>\n//     <p>React Course Project-3</p>\n//   </div>) \n// }\n// const Meme = () =>\n// {\n//   const [meme_data,setMemeData] = React.useState({\n//   meme_url : \"https://i.imgflip.com/25w3.jpg\",\n//   top_text : \"\",\n//   bottom_text : \"\",\n//   memes : {}\n//   });\n//   React.useEffect(() => {\n//     fetch(\"https://api.imgflip.com/get_memes\")\n//       .then(res => res.json())\n//       .then(data => setMemeData(function(prev_data)\n//       {\n//         return {\n//           ...prev_data,\n//           memes : data\n//         }\n//       }))\n//   },[])\n//   const handleClick = (event) =>\n//   {\n//     const random = Math.floor(Math.random()*meme_data.memes.data.memes.length)\n//     const newUrl = meme_data.memes.data.memes[random].url\n//     const {name,value,type} = event.target\n//     setMemeData(function(prev_data)\n//     {\n//       if(type === \"button\")\n//       {\n//         return {\n//           memes : prev_data.memes,\n//           meme_url : newUrl,\n//           top_text : \"\",\n//           bottom_text : \"\"\n//         }\n//       }\n//       else\n//       {\n//         return {\n//           ...prev_data,\n//           [name] : value\n//         }\n//       }\n//     })\n//   }\n//   return (\n//   <>\n//     <div className='meme'>\n//       <div className='input'>\n//         <input type=\"text\" placeholder= \"top text\" className='left' name= \"top_text\" onChange={handleClick} value = {meme_data.top_text}></input>\n//         <input type=\"text\" placeholder='bottom text' className='right' name= \"bottom_text\" onChange={handleClick} value = {meme_data.bottom_text}></input>\n//       </div> \n//       <button onClick={handleClick} name = \"meme_url\" type = \"button\">Get a new meme image ðŸ–¼</button>\n//     </div> \n//       <img src = {meme_data.meme_url} alt = \"Meme\" className='meme-image'/>\n//       <h2 className=\"meme--text top\">{meme_data.top_text}</h2>\n//       <h2 className=\"meme--text bottom\">{meme_data.bottom_text}</h2>\n//   </>\n//   )\n// }\n// const Element = <>\n//   <Navbar/>\n//   <Meme/>\n// </>\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(Element)\n\n\n                      "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;EACA,oBACE,QAAC,SAAD;IACE,KAAK,EAAEF,QADT;IAEE,QAAQ,EAAEC;EAFZ;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,C,CAgBD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjGSF,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}